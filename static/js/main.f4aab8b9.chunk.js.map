{"version":3,"sources":["api/index.js","Components/NewCommentForm/NewCommentForm.jsx","Components/CommentsForCharacter/CommentsForCharacter.jsx","App.jsx","index.js"],"names":["BASE_URL","NewCommentForm","setListComments","listComments","name","className","placeholder","type","method","onClick","e","form","target","parentElement","preventDefault","body","value","id","uuidv4","CommentsForCharacter","useState","visibilityComments","setVisibilityComments","currentArrComments","filter","comment","length","map","comm","App","arrCharacters","setArrCharacters","nameCharacter","setNameCharacter","useEffect","options","fetch","getCharacter","then","response","json","result","results","character","classNames","birth_year","classList","add","setName","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f4aab8b9.chunk.js","sourcesContent":["export const BASE_URL = 'https://swapi.dev/api/people';\n\nexport const getCharacter = (id = '', options) => fetch(\n  `${BASE_URL}/${id}`, options,\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport './NewCommentForm.scss';\n\nexport const NewCommentForm = ({\n  setListComments,\n  listComments,\n  name,\n}) => (\n  <form className=\"newCommentForm\" name=\"AddComment\">\n    <div className=\"form-field\">\n      <textarea\n        name=\"body\"\n        placeholder=\"Type comment here\"\n        className=\"newCommentForm__input\"\n      />\n    </div>\n    <button\n      type=\"submit\"\n      method=\"POST\"\n      className=\"newCommentForm__submit-button button\"\n      onClick={(e) => {\n        const form = e.target.parentElement;\n        e.preventDefault();\n        if (!form.body.value) {\n          return;\n        }\n        setListComments([...listComments, {\n          id: uuidv4(),\n          name,\n          body: form.body.value,\n        }]);\n\n        form.body.value = '';\n      }}\n    >\n      Add a comment\n    </button>\n  </form>\n);\n\nNewCommentForm.propTypes = {\n  setListComments: PropTypes.func.isRequired,\n  listComments: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    body: PropTypes.string.isRequired,\n  })).isRequired,\n  name: PropTypes.string.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { NewCommentForm } from '../NewCommentForm/NewCommentForm';\nimport './CommentsForCharacter.scss';\n\nexport const CommentsForCharacter = ({ name }) => {\n  const [visibilityComments, setVisibilityComments] = useState(true);\n  const [listComments, setListComments] = useState([]);\n  const currentArrComments = listComments.filter((comment) => comment.name === name);\n\n  return (\n    <div className=\"comments\">\n      <section className=\"commentDetails__post\">\n        <h2>Comments to character</h2>\n        <p className=\"commentDetails__name\">{name}</p>\n      </section>\n      {name && (\n      <section className=\"commentDetails__comments\">\n        {visibilityComments ? (\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={() => {\n              setVisibilityComments(false);\n            }}\n          >\n            Hide\n            {' '}\n            {currentArrComments.length}\n            {' '}\n            comments\n          </button>\n        ) : (\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={() => {\n              setVisibilityComments(true);\n            }}\n          >\n            Show\n            {' '}\n            {currentArrComments.length}\n            {' '}\n            comments\n          </button>\n        )}\n        <ul className=\"commentDetails__list\">\n          {visibilityComments\n              && currentArrComments.map((comment) => (\n                <li key={comment.id} className=\"commentDetails__list-item\">\n                  <p>{comment.body}</p>\n                  <button\n                    type=\"button\"\n                    className=\"commentDetails__remove-button button\"\n                    onClick={() => {\n                      setListComments(listComments.filter((comm) => comm.id !== comment.id));\n                    }}\n                  >\n                    X\n                  </button>\n                </li>\n              ))}\n        </ul>\n      </section>\n      )}\n      <section>\n        <div className=\"commentDetails__form-wrapper\">\n          <NewCommentForm\n            setListComments={setListComments}\n            listComments={listComments}\n            name={name}\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nCommentsForCharacter.propTypes = {\n  name: PropTypes.string.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport classNames from 'classnames';\nimport { getCharacter } from './api';\nimport './App.scss';\nimport { CommentsForCharacter } from './Components/CommentsForCharacter/CommentsForCharacter';\n\nfunction App() {\n  const [arrCharacters, setArrCharacters] = useState([]);\n  const [nameCharacter, setNameCharacter] = useState('');\n\n  useEffect(() => {\n    getCharacter()\n      .then((response) => response.json())\n      .then((result) => setArrCharacters(result.results));\n  }, []);\n\n  const setName = (character, e) => {\n    const element = e.target.parentElement;\n    element.classList.add('active');\n    setNameCharacter(character.name);\n  };\n\n  return (\n    <div className=\"app\">\n      <main className=\"app__main\">\n        <div className=\"app__sidebar\">\n          <h1>Meet, these are our characters</h1>\n          <ol className=\"postsList\">\n            {arrCharacters.map((character) => (\n              <li key={uuidv4()} className={classNames('postsList__item', character.name === nameCharacter && 'active')}>\n                <span className=\"textStyle\">\n                  Name:\n                  {' '}\n                  {character.name}\n                </span>\n                <span className=\"textStyle\">\n                  Birthday:\n                  {' '}\n                  {character.birth_year}\n                </span>\n                <button\n                  type=\"button\"\n                  className=\"postsList__button\"\n                  onClick={(e) => {\n                    setName(character, e);\n                  }}\n                >\n                  Comment\n                </button>\n              </li>\n            ))}\n          </ol>\n        </div>\n        {nameCharacter ? (\n          <div className=\"app__content\">\n            {nameCharacter ? (\n              <CommentsForCharacter\n                name={nameCharacter}\n              />\n            ) : ''}\n          </div>\n        ) : ''}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}